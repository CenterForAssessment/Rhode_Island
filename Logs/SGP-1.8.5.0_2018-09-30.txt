
Started abcSGP Sunday September 30 21:47:25 2018


	abcSGP(
		 sgp_object = Rhode_Island_Data_LONG
		steps = c("prepareSGP", "analyzeSGP", "combineSGP", "outputSGP")
		sgp.percentiles = TRUE
		sgp.projections = FALSE
		sgp.projections.lagged = FALSE
		sgp.percentiles.baseline = FALSE
		sgp.projections.baseline = FALSE
		sgp.projections.lagged.baseline = FALSE
		sgp.target.scale.scores = FALSE
		simulate.sgps = FALSE
		save.intermediate.results = FALSE
		sgp.config = RI_CONFIG
		outputSGP.output.type = LONG_FINAL_YEAR_Data
		sgp.percentiles.equated = FALSE )


Started prepareSGP Sunday September 30 21:47:26 2018


	prepareSGP(
		 data = sgp_object
		data_supplementary = data_supplementary
		state = state
		var.names = prepareSGP.var.names
		create.additional.variables = prepareSGP.create.additional.variables
		fix.duplicates = fix.duplicates )

Finished prepareSGP Sunday September 30 21:47:27 2018 in 0.843 Seconds 


Started analyzeSGP Sunday September 30 21:47:27 2018


	analyzeSGP(
		 sgp_object = sgp_object
		state = state
		years = years
		content_areas = content_areas
		grades = grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.minimum.default.panel.years = sgp.minimum.default.panel.years
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		sgp.config = sgp.config
		parallel.config = parallel.config
		verbose.output = verbose.output
		get.cohort.data.info = get.cohort.data.info
		sgp.sqlite = sgp.sqlite
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt
		fix.duplicates = fix.duplicates )

	NOTE: Configurations include years prior to assessment transition (2017_2018).
		Output will include SGPs of all orders to accomodate investigations.

	Started studentGrowthPercentiles: Sunday September 30 21:47:27 2018
		Content Area: MATHEMATICS_SAT, Year: 2017_2018, Grade Progression: EOCT, EOCT  (N=7,513)
	Finished studentGrowthPercentiles: Sunday September 30 21:47:35 2018 in 8.09 Seconds

	Started studentGrowthPercentiles: Sunday September 30 21:47:35 2018
		Content Area: MATHEMATICS_SAT, Year: 2017_2018, Grade Progression: EOCT, EOCT, EOCT  (N=4,772)
	Finished studentGrowthPercentiles: Sunday September 30 21:47:41 2018 in 6.442 Seconds

	Started studentGrowthPercentiles: Sunday September 30 21:47:41 2018
		Content Area: MATHEMATICS_PSAT_10, Year: 2017_2018, Grade Progression: EOCT, EOCT  (N=2,072)
	Finished studentGrowthPercentiles: Sunday September 30 21:47:43 2018 in 1.237 Seconds

	Started studentGrowthPercentiles: Sunday September 30 21:47:43 2018
		Content Area: MATHEMATICS_PSAT_10, Year: 2017_2018, Grade Progression: EOCT, EOCT, EOCT  (N=1,867)
	Finished studentGrowthPercentiles: Sunday September 30 21:47:44 2018 in 1.739 Seconds

	Started studentGrowthPercentiles: Sunday September 30 21:47:45 2018
		Content Area: MATHEMATICS_PSAT_10, Year: 2017_2018, Grade Progression: EOCT, EOCT  (N=6,356)
	Finished studentGrowthPercentiles: Sunday September 30 21:47:51 2018 in 6.129 Seconds

	Started studentGrowthPercentiles: Sunday September 30 21:47:51 2018
		Content Area: MATHEMATICS_PSAT_10, Year: 2017_2018, Grade Progression: 8, EOCT, EOCT  (N=5,451)
	Finished studentGrowthPercentiles: Sunday September 30 21:47:59 2018 in 8.313 Seconds

	Started studentGrowthPercentiles: Sunday September 30 21:47:59 2018
		Content Area: ELA_SAT, Year: 2017_2018, Grade Progression: EOCT, EOCT  (N=7,525)
	Finished studentGrowthPercentiles: Sunday September 30 21:48:08 2018 in 8.583 Seconds

	Started studentGrowthPercentiles: Sunday September 30 21:48:08 2018
		Content Area: ELA_SAT, Year: 2017_2018, Grade Progression: 9, EOCT, EOCT  (N=7,066)
	Finished studentGrowthPercentiles: Sunday September 30 21:48:21 2018 in 13 Seconds

	Started studentGrowthPercentiles: Sunday September 30 21:48:21 2018
		Content Area: ELA_PSAT_10, Year: 2017_2018, Grade Progression: 9, EOCT  (N=9,339)
	Finished studentGrowthPercentiles: Sunday September 30 21:48:33 2018 in 12 Seconds

	Started studentGrowthPercentiles: Sunday September 30 21:48:33 2018
		Content Area: ELA_PSAT_10, Year: 2017_2018, Grade Progression: 8, 9, EOCT  (N=8,475)
	Finished studentGrowthPercentiles: Sunday September 30 21:48:49 2018 in 15.7 Seconds

Finished analyzeSGP Sunday September 30 21:48:52 2018 in 1 Minute, 25 Seconds 

Started combineSGP Sunday September 30 21:48:52 2018
	NOTE: RI SGPstate meta-data indicates assessment transition in current year but no linkages found in current data. sgp.percentiles.equated set to FALSE.
	NOTE: Multiple content areas detected for student growth targets. 'sgp.target.content_areas set to TRUE.
Finished combineSGP Sunday September 30 21:48:52 2018 in 0.183 Seconds 


Started outputSGP Sunday September 30 21:48:52 2018: Files produced from outputSGP saved in 'Data'



	outputSGP(
		 sgp_object = sgp_object
		state = state
		output.type = outputSGP.output.type
		outputSGP_SUMMARY.years = years
		outputSGP_SUMMARY.content_areas = content_areas
		outputSGP_INDIVIDUAL.years = years
		outputSGP_INDIVIDUAL.content_areas = content_areas
		outputSGP.student.groups = intersect(names(sgp_object@Data), subset(sgp_object@Names, names.type == "demographic" & names.output == TRUE, select = names.provided, drop = TRUE))
		outputSGP.directory = outputSGP.directory )

	Started LONG FINAL YEAR data production in outputSGP Sunday September 30 21:48:52 2018
	Finished LONG FINAL YEAR data production in outputSGP Sunday September 30 21:48:53 2018 in 0.964 Seconds 

Finished outputSGP Sunday September 30 21:48:53 2018 in 0.971 Seconds 

Finished abcSGP Sunday September 30 21:48:53 2018 in 1 Minute, 27 Seconds 


Started updateSGP Sunday September 30 21:49:56 2018


	updateSGP(
		 what_sgp_object = Rhode_Island_SGP
		with_sgp_data_LONG = Rhode_Island_Data_LONG_2017_2018
		steps = c("prepareSGP", "analyzeSGP", "combineSGP", "outputSGP", "summarizeSGP")
		content_areas = c("ELA", "MATHEMATICS")
		sgp.percentiles = TRUE
		sgp.projections = FALSE
		sgp.projections.lagged = FALSE
		sgp.percentiles.baseline = FALSE
		sgp.projections.baseline = FALSE
		sgp.projections.lagged.baseline = FALSE
		simulate.sgps = TRUE
		save.intermediate.results = FALSE
		calculate.simex = TRUE
		overwrite.existing.data = FALSE
		output.updated.data = FALSE
		goodness.of.fit.print = TRUE
		parallel.config = list(BACKEND = "PARALLEL", WORKERS = list(TAUS = 15, SIMEX = 15, SUMMARY = 15))
		sgp.percentiles.equated = FALSE )


Started prepareSGP Sunday September 30 21:49:56 2018


	prepareSGP(
		 data = with_sgp_data_LONG
		state = state
		create.additional.variables = FALSE
		fix.duplicates = NULL )

	NOTE: GRADE in @Data converted from integer to character.
Finished prepareSGP Sunday September 30 21:49:57 2018 in 0.57 Seconds 


Started prepareSGP Sunday September 30 21:49:59 2018


	prepareSGP(
		 data = what_sgp_object
		state = state
		create.additional.variables = FALSE
		fix.duplicates = fix.duplicates )

Finished prepareSGP Sunday September 30 21:49:59 2018 in 0.645 Seconds 


Started abcSGP Sunday September 30 21:49:59 2018


	abcSGP(
		 sgp_object = what_sgp_object
		state = state
		steps = (steps %w/o% "prepareSGP")
		years = update.years
		content_areas = update.content_areas
		grades = update.grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.target.scale.scores = sgp.target.scale.scores
		sgp.target.scale.scores.only = sgp.target.scale.scores.only
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		parallel.config = parallel.config
		save.intermediate.results = save.intermediate.results
		save.old.summaries = save.old.summaries
		sgPlot.demo.report = sgPlot.demo.report
		sgp.config = sgp.config
		plot.types = plot.types
		outputSGP.output.type = outputSGP.output.type
		outputSGP.directory = outputSGP.directory
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt
		fix.duplicates = fix.duplicates )


Started analyzeSGP Sunday September 30 21:49:59 2018


	analyzeSGP(
		 sgp_object = sgp_object
		state = state
		years = years
		content_areas = content_areas
		grades = grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.minimum.default.panel.years = sgp.minimum.default.panel.years
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		sgp.config = sgp.config
		parallel.config = parallel.config
		verbose.output = verbose.output
		get.cohort.data.info = get.cohort.data.info
		sgp.sqlite = sgp.sqlite
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt
		fix.duplicates = fix.duplicates )

	NOTE: Configurations include years prior to assessment transition (2017_2018).
		Output will include SGPs of all orders to accomodate investigations.

	Started studentGrowthPercentiles: Sunday September 30 21:50:00 2018
		Content Area: MATHEMATICS, Year: 2017_2018, Grade Progression: 6, 7, 8 SIMEX (N=10,149)
	Finished studentGrowthPercentiles: Sunday September 30 22:18:10 2018 in 28 Minutes, 10 Seconds

	Started studentGrowthPercentiles: Sunday September 30 22:18:10 2018
		Content Area: MATHEMATICS, Year: 2017_2018, Grade Progression: 5, 6, 7 SIMEX (N=9,963)
	Finished studentGrowthPercentiles: Sunday September 30 22:45:54 2018 in 27 Minutes, 43 Seconds

	Started studentGrowthPercentiles: Sunday September 30 22:45:54 2018
		Content Area: MATHEMATICS, Year: 2017_2018, Grade Progression: 4, 5, 6 SIMEX (N=10,000)
	Finished studentGrowthPercentiles: Sunday September 30 23:13:50 2018 in 27 Minutes, 56 Seconds

	Started studentGrowthPercentiles: Sunday September 30 23:13:50 2018
		Content Area: MATHEMATICS, Year: 2017_2018, Grade Progression: 3, 4, 5 SIMEX (N=10,373)
	Finished studentGrowthPercentiles: Sunday September 30 23:41:47 2018 in 27 Minutes, 56 Seconds

	Started studentGrowthPercentiles: Sunday September 30 23:41:47 2018
		Content Area: MATHEMATICS, Year: 2017_2018, Grade Progression: 3, 4 SIMEX (N=10,184)
	Finished studentGrowthPercentiles: Sunday September 30 23:54:06 2018 in 12 Minutes, 18 Seconds

