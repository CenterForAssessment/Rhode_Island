
Started updateSGP Monday August 12 11:16:27 2019


	updateSGP(
		 what_sgp_object = Rhode_Island_SGP
		with_sgp_data_LONG = Rhode_Island_Data_LONG_2018_2019
		steps = c("prepareSGP", "analyzeSGP", "combineSGP", "outputSGP")
		sgp.percentiles = TRUE
		sgp.projections = FALSE
		sgp.projections.lagged = FALSE
		sgp.percentiles.baseline = FALSE
		sgp.projections.baseline = FALSE
		sgp.projections.lagged.baseline = FALSE
		save.intermediate.results = FALSE
		sgp.target.scale.scores = FALSE
		sgp.config = RI_CONFIG
		sgp.percentiles.equated = FALSE )


Started prepareSGP Monday August 12 11:16:27 2019


	prepareSGP(
		 data = with_sgp_data_LONG
		state = state
		create.additional.variables = FALSE
		fix.duplicates = NULL )

Finished prepareSGP Monday August 12 11:16:28 2019 in 0.179 Seconds 


Started prepareSGP Monday August 12 11:16:29 2019


	prepareSGP(
		 data = what_sgp_object
		state = state
		fix.duplicates = fix.duplicates )

	NOTE: Added variable HIGH_NEED_STATUS to @Data.
Finished prepareSGP Monday August 12 11:16:36 2019 in 6.962 Seconds 


Started abcSGP Monday August 12 11:16:36 2019


	abcSGP(
		 sgp_object = what_sgp_object
		state = state
		steps = steps
		years = update.years
		content_areas = update.content_areas
		grades = update.grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.target.scale.scores = sgp.target.scale.scores
		sgp.target.scale.scores.only = sgp.target.scale.scores.only
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		parallel.config = parallel.config
		save.intermediate.results = save.intermediate.results
		save.old.summaries = FALSE
		sgPlot.demo.report = sgPlot.demo.report
		sgp.config = sgp.config
		plot.types = plot.types
		outputSGP.output.type = outputSGP.output.type
		outputSGP.directory = outputSGP.directory
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt
		fix.duplicates = fix.duplicates )


Started prepareSGP Monday August 12 11:16:36 2019


	prepareSGP(
		 data = sgp_object
		data_supplementary = data_supplementary
		state = state
		var.names = prepareSGP.var.names
		create.additional.variables = prepareSGP.create.additional.variables
		fix.duplicates = fix.duplicates )

Finished prepareSGP Monday August 12 11:16:38 2019 in 2.692 Seconds 


Started analyzeSGP Monday August 12 11:16:38 2019


	analyzeSGP(
		 sgp_object = sgp_object
		state = state
		years = years
		content_areas = content_areas
		grades = grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.minimum.default.panel.years = sgp.minimum.default.panel.years
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		goodness.of.fit.print = goodness.of.fit.print
		sgp.config = sgp.config
		parallel.config = parallel.config
		verbose.output = verbose.output
		get.cohort.data.info = get.cohort.data.info
		sgp.sqlite = sgp.sqlite
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt
		fix.duplicates = fix.duplicates )

	NOTE: Configurations include years prior to assessment transition (2017_2018).
		SGPs of maximum order up to the transition year (2017_2018) in addition to standard SGPs will be produced.
	NOTE: Configurations include years prior to assessment transition (2017_2018).
		Output will include SGPs of all orders to accomodate investigations.

	Started studentGrowthPercentiles: Monday August 12 11:16:39 2019
		Content Area: MATHEMATICS, Year: 2018_2019, Grade Progression: 6, 7, 8  (N=10,083)
	Finished studentGrowthPercentiles: Monday August 12 11:17:02 2019 in 23.377 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:17:02 2019
		Content Area: MATHEMATICS, Year: 2018_2019, Grade Progression: 5, 6, 7  (N=10,153)
	Finished studentGrowthPercentiles: Monday August 12 11:17:26 2019 in 23.978 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:17:26 2019
		Content Area: MATHEMATICS, Year: 2018_2019, Grade Progression: 4, 5, 6  (N=10,298)
	Finished studentGrowthPercentiles: Monday August 12 11:17:50 2019 in 23.361 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:17:50 2019
		Content Area: MATHEMATICS, Year: 2018_2019, Grade Progression: 3, 4, 5  (N=10,252)
	Finished studentGrowthPercentiles: Monday August 12 11:18:13 2019 in 22.747 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:18:13 2019
		Content Area: MATHEMATICS, Year: 2018_2019, Grade Progression: 3, 4  (N=9,956)
	Finished studentGrowthPercentiles: Monday August 12 11:18:27 2019 in 14.517 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:18:27 2019
		Content Area: MATHEMATICS_SAT, Year: 2018_2019, Grade Progression: EOCT, EOCT  (N=9,219)
	Finished studentGrowthPercentiles: Monday August 12 11:18:41 2019 in 13.464 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:18:41 2019
		Content Area: ELA, Year: 2018_2019, Grade Progression: 6, 7, 8  (N=9,968)
	Finished studentGrowthPercentiles: Monday August 12 11:19:02 2019 in 21.217 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:19:02 2019
		Content Area: ELA, Year: 2018_2019, Grade Progression: 5, 6, 7  (N=10,052)
	Finished studentGrowthPercentiles: Monday August 12 11:19:34 2019 in 31.95 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:19:34 2019
		Content Area: ELA, Year: 2018_2019, Grade Progression: 4, 5, 6  (N=10,184)
	Finished studentGrowthPercentiles: Monday August 12 11:20:00 2019 in 26.511 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:20:00 2019
		Content Area: ELA, Year: 2018_2019, Grade Progression: 3, 4, 5  (N=10,143)
	Finished studentGrowthPercentiles: Monday August 12 11:20:27 2019 in 26.036 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:20:27 2019
		Content Area: ELA, Year: 2018_2019, Grade Progression: 3, 4  (N=9,842)
	Finished studentGrowthPercentiles: Monday August 12 11:20:39 2019 in 12.527 Seconds

	Started studentGrowthPercentiles: Monday August 12 11:20:39 2019
		Content Area: ELA_SAT, Year: 2018_2019, Grade Progression: EOCT, EOCT  (N=9,228)
	Finished studentGrowthPercentiles: Monday August 12 11:20:53 2019 in 13.42 Seconds

Finished analyzeSGP Monday August 12 11:21:06 2019 in 4 Minutes, 28.002 Seconds 

Started combineSGP Monday August 12 11:21:06 2019
	NOTE: Multiple content areas detected for student growth targets. 'sgp.target.content_areas set to TRUE.
Finished combineSGP Monday August 12 11:21:07 2019 in 0.393 Seconds 


Started outputSGP Monday August 12 11:21:07 2019: Files produced from outputSGP saved in 'Data'



	outputSGP(
		 sgp_object = sgp_object
		state = state
		output.type = outputSGP.output.type
		outputSGP_SUMMARY.years = years
		outputSGP_SUMMARY.content_areas = content_areas
		outputSGP_INDIVIDUAL.years = years
		outputSGP_INDIVIDUAL.content_areas = content_areas
		outputSGP.student.groups = intersect(names(sgp_object@Data), subset(sgp_object@Names, names.type == "demographic" & names.output == TRUE, select = names.provided, drop = TRUE))
		outputSGP.directory = outputSGP.directory )

	Started LONG data production in outputSGP Monday August 12 11:21:07 2019
	Finished LONG data production in outputSGP Monday August 12 11:21:24 2019 in 16.736 Seconds 

	Started LONG FINAL YEAR data production in outputSGP Monday August 12 11:21:24 2019
	Finished LONG FINAL YEAR data production in outputSGP Monday August 12 11:21:28 2019 in 4.291 Seconds 

	Started WIDE data production in outputSGP Monday August 12 11:21:28 2019
	Finished WIDE data production in outputSGP Monday August 12 11:22:08 2019 in 40.181 Seconds 

Finished outputSGP Monday August 12 11:22:08 2019 in 1 Minute, 1.221 Seconds 

Finished abcSGP Monday August 12 11:22:08 2019 in 5 Minutes, 32.35 Seconds 

Finished updateSGP Monday August 12 11:22:08 2019 in 5 Minutes, 40.678 Seconds 

